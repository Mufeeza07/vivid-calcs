generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs      Job[]    @relation("UserJobs")
}

enum Role {
  USER
  ADMIN
}

model Job {
  jobId                 String   @id @default(uuid()) 
  address               String
  windSpeed             String    
  locationFromCoastline String  
  councilName           String
  status                JobStatus @default(PENDING)
  userId                String   
  comments              String?
  createdAt             DateTime @default(now())      
  updatedAt             DateTime @updatedAt            
  user                  User     @relation("UserJobs", fields: [userId], references: [id])

  nails                 Nails[]  
  boltStrength          BoltStrength[]
  weld                  Weld[]
  soilAnalysis          SoilAnalysis[]
  beamAnalysis          BeamAnalysis[]
  slabAnalysis          SlabAnalysis[]
}

enum JobStatus{
  PENDING
  IN_PROGRESS
  ON_HOLD
  COMPLETED
}


model Nails {
    id                   Int     @id @default(autoincrement())
    jobId                String  
    type                 Type
    k13                  Float
    diameter             Float
    screwJD              Float
    phi                  Float
    k1                   Float
    k14                  Float
    k16                  Float
    k17                  Float
    designLoad           Float
    screwPenetration     Float
    firstTimberThickness Float
    createdAt            DateTime @default(now())      
    updatedAt            DateTime @updatedAt     

    job                  Job     @relation(fields: [jobId], references: [jobId], onDelete: Cascade)

}

enum Type {
  STEEL_TO_STEEL
  TIMBER_TO_TIMBER
  TIMBER_TO_STEEL
}


model BoltStrength {
    id                   Int     @id @default(autoincrement())
    jobId                String  
    type                 Type
    phi                  Float
    k1                   Float
    k16                  Float
    k17                  Float
    qsk                  Float
    designStrength       Float
    createdAt            DateTime @default(now())      
    updatedAt            DateTime @updatedAt     

    job                  Job     @relation(fields: [jobId], references: [jobId], onDelete: Cascade)

}

model Weld {
    id                   Int     @id @default(autoincrement())
    jobId                String  
    type                 Type
    phi                  Float
    vw                   Float
    fuw                  Float
    tt                   Float
    kr                   Float
    strength             Float
    createdAt            DateTime @default(now())      
    updatedAt            DateTime @updatedAt     

    job                  Job     @relation(fields: [jobId], references: [jobId], onDelete: Cascade)

}

model SoilAnalysis {
    id                   Int     @id @default(autoincrement())
    jobId                String  
    type                 Type
    shrinkageIndex       Float
    lateralRestraint     Float
    suctionChange        Float
    layerThickness       Float
    instabilityIndex     Float
    surfaceMovement      Float
    createdAt            DateTime @default(now())      
    updatedAt            DateTime @updatedAt     

    job                  Job     @relation(fields: [jobId], references: [jobId], onDelete: Cascade)

}

model BeamAnalysis {
    id              Int     @id @default(autoincrement())
    jobId           String  
    type            String
    span            Float
    slabThickness   Float
    floorLoadWidth  Float
    roofLoadWidth   Float
    wallHeight      Float
    slabDensity     Float
    slabLiveLoad    Float
    flooringLoad    Float
    roofDeadLoad    Float
    roofLiveLoad    Float
    wallDeadLoad    Float
    totalDeadLoad   Float
    totalLiveLoad   Float
    ultimateLoad    Float
    moment          Float
    shear           Float
    createdAt       DateTime @default(now())      
    updatedAt       DateTime @updatedAt     

    job             Job     @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

model SlabAnalysis {
    id              Int     @id @default(autoincrement())
    jobId           String  
    type            String
    span            Float
    slabThickness   Float
    loadWidth       Float
    slabDensity     Float
    slabLiveLoad    Float
    flooringLoad    Float
    totalDeadLoad   Float
    totalLiveLoad   Float
    ultimateLoad    Float
    moment          Float
    shear           Float
    createdAt       DateTime @default(now())      
    updatedAt       DateTime @updatedAt     

    job             Job     @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}
