generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs      Job[]    @relation("UserJobs")
}

enum Role {
  USER
  ADMIN
}

model Job {
  jobId                 String       @id @default(uuid())
  address               String
  windCategory          WindCategory @default(N1_W28N)
  windSpeed             String
  locationFromCoastline String
  councilName           String
  status                JobStatus    @default(PENDING)
  userId                String
  comments              String?
  createdAt             DateTime     @default(now())
  updatedAt             DateTime     @updatedAt
  user                  User         @relation("UserJobs", fields: [userId], references: [id])

  nails            Nails[]
  boltStrength     BoltStrength[]
  weld             Weld[]
  soilAnalysis     SoilAnalysis[]
  screwStrength    ScrewStrength[]
  beamSlabAnalysis BeamSlabAnalysis[]
  pileAnalysis     PileAnalysis[]
}

enum JobStatus {
  PENDING
  IN_PROGRESS
  ON_HOLD
  COMPLETED
}

enum WindCategory {
  N1_W28N
  N2_W33N
  N3_W41N
  N4_W50N
  N5_W60N
  N6_W70N
  C1_W41N
  C2_W50N
  C3_W60N
  C4_W70N
}

model Nails {
  id                   String    @id @default(uuid())
  jobId                String
  type                 Type
  category             Category?
  jdType               JDType?
  load                 Load?
  loadType             LoadType?
  phi                  Float?
  k1                   Float?
  k13                  Float?
  k14                  Float?
  k16                  Float?
  k17                  Float?
  screwJD              Float?
  nailDiameter         Float?
  designLoad           Float?
  screwPenetration     Float?
  firstTimberThickness Float?
  note                 String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

enum Type {
  STEEL_TO_STEEL
  TIMBER_TO_TIMBER
  TIMBER_TO_STEEL
}

model BoltStrength {
  id              String           @id @default(uuid())
  jobId           String
  type            Type
  phi             Float
  k1              Float
  k16             Float
  k17             Float
  qsk             Float
  category        Category?
  load            Load?
  loadType        LoadType?
  jdType          JDType?
  boltSize        BoltSize?
  timberThickness TimberThickness?
  designStrength  Float
  note            String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

enum BoltSize {
  M6
  M8
  M10
  M12
  M16
  M20
  M24
  M30
  M36
}

enum TimberThickness {
  TT_25
  TT_35
  TT_40
  TT_45
  TT_70
  TT_90
  TT_105
  TT_120
}

model Weld {
  id        String   @id @default(uuid())
  jobId     String
  type      Type
  phi       Float
  vw        Float
  fuw       Float
  tt        Float
  kr        Float
  strength  Float
  note      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

model SoilAnalysis {
  id               String   @id @default(uuid())
  jobId            String
  type             Type
  shrinkageIndex   Float
  lateralRestraint Float
  suctionChange    Float
  layerThickness   Float
  instabilityIndex Float
  surfaceMovement  Float
  note             String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

model BeamSlabAnalysis {
  id             String       @id @default(uuid())
  jobId          String
  type           Type
  analysisType   AnalysisType
  span           Float?
  slabThickness  Float?
  floorLoadWidth Float?
  roofLoadWidth  Float?
  wallHeight     Float?
  slabDensity    Float?
  slabLiveLoad   Float?
  flooringLoad   Float?
  roofDeadLoad   Float?
  roofLiveLoad   Float?
  wallDeadLoad   Float?
  totalDeadLoad  Float?
  totalLiveLoad  Float?
  ultimateLoad   Float?
  moment         Float?
  shear          Float?
  note           String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

enum AnalysisType {
  BEAM
  SLAB
}

model ScrewStrength {
  id                   String     @id @default(uuid())
  jobId                String
  type                 Type
  screwType            ScrewType
  category             Category?
  screwSize            ScrewSize?
  jdType               JDType?
  load                 Load?
  loadType             LoadType?
  phi                  Float?
  k1                   Float?
  k13                  Float?
  k14                  Float?
  k16                  Float?
  k17                  Float?
  screwJD              Float?
  shankDiameter        Float?
  lp                   Float?
  qk                   Float?
  designLoad           Float?
  screwPenetration     Float?
  firstTimberThickness Float?
  note                 String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}

enum Category {
  AFFECTED_AREA_LESS_25M2
  AFFECTED_AREA_GREATER_25M2
  POST_DISASTER_BUILDING
}

enum ScrewType {
  SHEAR
  PULLOUT
}

enum ScrewSize {
  SIZE_4
  SIZE_6
  SIZE_8
  SIZE_10
  SIZE_12
  SIZE_14
  SIZE_18
}

enum JDType {
  JD1
  JD2
  JD3
  JD4
  JD5
  JD6
}

enum Load {
  PARALLEL_TO_GRAINS
  PERPENDICULAR_TO_GRAINS
}

enum LoadType {
  PERMANENT_ACTION
  ROOF_LIVE_LOAD_DISTRIBUTED
  ROOF_LIVE_LOAD_CONCENTRATED
  FLOOR_LIVE_LOADS_DISTRIBUTED
  FLOOR_LIVE_LOADS_CONCENTRATED
  PERMANENT_LONG_TERM_IMPOSED_ACTION
  PERMANENT_WIND_IMPOSED_ACTION
  PERMANENT_WIND_ACTION_REVERSAL
  PERMANENT_EARTHQUAKE_IMPOSED_ACTION
  FIRE
}

model PileAnalysis {
  id                    String  @id @default(uuid())
  jobId                 String
  type                  Type
  frictionAngle         Float
  safetyFactor          Float
  ks                    Float
  soilDensity           Float
  pileHeight            Float
  factor                Float
  pileDiameter          Float
  frictionResistanceAS  Float
  frictionResistanceMH  Float
  weight                Float
  cohension             Float
  nq                    Float
  nc                    Float
  reductionStrength     Float
  endBearing            Float
  totalUpliftResistance Float
  totalPileCapacityAS   Float
  totalPileCapacityMH   Float
  note                  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  job Job @relation(fields: [jobId], references: [jobId], onDelete: Cascade)
}
